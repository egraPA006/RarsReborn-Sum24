/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'application'
    id 'checkstyle'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
    javafxVersion = '17'
}

dependencies {
    implementation "org.openjfx:javafx-base:${javafxVersion}"
    implementation "org.openjfx:javafx-controls:${javafxVersion}"
    implementation "org.openjfx:javafx-graphics:${javafxVersion}"
    implementation "org.openjfx:javafx-fxml:${javafxVersion}"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    checkstyle "com.puppycrawl.tools:checkstyle:${checkstyle.toolVersion}"
}
test {
    useJUnitPlatform()
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainClass = 'rars.Launch'
}

jar {
    manifest {
        attributes 'Main-Class': 'rars.Launch'
    }
}

javafx {
    version = '17'
    modules = ['javafx.controls', 'javafx.graphics']
}
checkstyle {
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml") 
}
checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}